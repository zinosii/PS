import sys
input=sys.stdin.readline
INF=10e4

T=int(input())

def DPfill():
    for i in range(2,N+1):
        IN=2
        OUT=2
        BOTH=2
        if INarr[i-1]+INarr[i]<=W:
            IN=1
        if OUTarr[i-1]+OUTarr[i]<=W:
            OUT=1
        if INarr[i]+OUTarr[i]<=W:
            BOTH=1
        DP[i][0]=min(DP[i-1][2]+1,DP[i-1][1]+IN)
        DP[i][1]=min(DP[i-1][2]+1,DP[i-1][0]+OUT)
        DP[i][2]=min(DP[i-1][2]+BOTH,DP[i-2][2]+IN+OUT,DP[i][0]+1,DP[i][1]+1)

while T:
    T-=1
    ans=INF
    N,W=map(int,input().split())
    INarr=[0]+list(map(int,input().split()))
    OUTarr=[0]+list(map(int,input().split()))
    Itemp=INarr[1]
    Otemp=OUTarr[1]
    DP=[[0]*3 for i in range(N+1)]
    
    #1 아무연결이 없을 경우
    DP[1][0]=1
    DP[1][1]=1
    DP[1][2]=2
    if INarr[1]+OUTarr[1]<=W:
        DP[1][2]=1
    DPfill()
    ans=min(ans,DP[N][2])
    
    
    #2 INarr에서만 연결
    if N!=1 and INarr[1]+INarr[N]<=W: 
        DP[1][0]=1
        DP[1][1]=1
        DP[1][2]=2
        INarr[1]=INF
        DPfill()
        INarr[1]=Itemp
        ans=min(ans,DP[N][1])
        DP=[[0]*3 for i in range(N+1)]
        
    #3 OUTarr에서만 연결
    if N!=1 and OUTarr[1]+OUTarr[N]<=W: 
        DP[1][0]=1
        DP[1][1]=1
        DP[1][2]=2
        OUTarr[1]=INF
        DPfill()
        OUTarr[1]=Otemp
        ans=min(ans,DP[N][0])
        DP=[[0]*3 for i in range(N+1)]
        
    #4 둘다 연결된 경우
    if N!=1 and INarr[1]+INarr[N]<=W and OUTarr[1]+OUTarr[N]<=W:
        DP[1][0]=1
        DP[1][1]=1
        DP[1][2]=2
        INarr[1]=INF
        OUTarr[1]=INF
        DPfill()
        ans=min(ans,DP[N-1][2])
        
    print(ans)
        
        
