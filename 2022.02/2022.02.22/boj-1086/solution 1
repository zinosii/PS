'''DP+비트마스크'''

import sys
from collections import deque
input=sys.stdin.readline


N=int(input())
L=[]

def GCD(x,N):
    xx=x
    y=1
    for i in range(2,N+1):
        y*=i
    yy=y
    while x!=0:
        r=y%x
        y=x
        x=r
    print(str(xx//y)+'/'+str(yy//y))


def R(s):
    ret=0
    l=len(s)
    for i in range(l):
        ret+=int(s[l-i-1])*div10[i]
        ret%=K
    return (ret,l)

for i in range(N):
    L.append(input().rstrip())
K=int(input())

div10=[1]+[0]*50
for i in range(1,51):
    div10[i]=(div10[i-1]*10)%K

for i,e in enumerate(L):
    L[i]=R(e)

M=(1<<N)-1
    
DP=[[0]*K for _ in range(M+1)]
DP[0][0]=1

x={i:set() for i in range(M+1)}
x[0].add(0)
for bit in range(1<<N):
    for remainder in x[bit]:
        for i in range(N):
            if (1<<i) & bit:
                continue
            nb=bit|(1<<i)
            nr=(remainder*(div10[L[i][1]])+L[i][0])%K
            DP[nb][nr]+=DP[bit][remainder]   
            x[nb].add(nr)


GCD(DP[M][0],N)

