import sys
input=sys.stdin.readline

N=int(input())
l=list(map(int,input().split()))
manacher=['#']*(2*N-1)
for i in range(N):
    manacher[2*i]=l[i]

#manacher
A=[0]*(2*N-1) #각 점으로부터 가장 긴 팰린드롬의 반지름 
r=0 #현재까지 발견된 가장 긴 팰린드롬의 끝 점
c=0 #중심점
for i in range(2*N-1):
    if i<=r: #i가 c를 중심으로하고 r에서 끝나는 팰린드롬 내부에 있음
        A[i]=min(r-i,A[2*c-i]) #i로부터 r까지의 거리와, c가 중심이므로
        # 반대쪽에 위치한 2*c-i의 A값을 가져와 더 작은값을 넣어줌
        # 만약 2*c-i가 팰린드롬의 중심이라면,(A[2*c-i]가 0이 아니라면) i또한 팰린드롬을 이룸
    else: #팰린드롬인지 모름
        A[i]=0   
    while i-A[i]-1>=0 and i+A[i]+1<2*N-1 and manacher[i-A[i]-1]==manacher[i+A[i]+1]:
        A[i]+=1
    if r<i+A[i]: #더 긴 팰린드롬일 경우
        r=i+A[i] #r값을 업데이트
        c=i #c값을 업데이트

M=int(input())
for i in range(M):
    s,e=map(int,input().split())
    s=(s-1)*2
    e=(e-1)*2
    m=(s+e)//2
    if A[m]>=m-s:
        print(1)
    else:
        print(0)




